# .github/workflows/release.yaml
name: Test and Release

on:
  push:
    tags:
      - 'v*.*.*' # 仅在推送 vX.X.X 格式的标签时触发
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.11'] # 在多个版本上运行测试

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with pytest
        run: pytest

  build-release:
    name: Build and Release
    # 仅在推送版本标签时运行，并且必须在测试通过后
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-latest
    # 赋予创建Release的权限
    permissions:
      contents: write

    steps:
      # 第一步：检出你的代码
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # 获取所有历史记录，以便能找到所有标签
          fetch-depth: 0

      # 第二步：从CHANGELOG.md中提取当前版本的更新日志
      - name: Extract release notes from CHANGELOG.md
        id: changelog
        run: |
          TAG=${{ github.ref_name }}
          VERSION=${TAG#v}
          NOTES=$(awk "/## \\[$VERSION\\]/{flag=1; next} /## \\[/{flag=0} flag" CHANGELOG.md | sed '/^$/N;/^\n$/D')
          NOTES="${NOTES//'%'/'%25'}"
          NOTES="${NOTES//$'\n'/'%0A'}"
          NOTES="${NOTES//$'\r'/'%0D'}"
          echo "notes=${NOTES}" >> $GITHUB_OUTPUT
        shell: bash

      # 第三步：创建 GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.changelog.outputs.notes }}
          name: Release ${{ github.ref_name }}
          prerelease: contains(github.ref_name, '-')